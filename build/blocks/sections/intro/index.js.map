{"version":3,"file":"blocks/sections/intro/index.js","mappings":"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","sources":["webpack://react-wordpress/./node_modules/@wordpress/icons/build-module/library/more.js","webpack://react-wordpress/./src/blocks/sections/intro/components/edit.tsx","webpack://react-wordpress/./src/blocks/sections/intro/components/save.tsx","webpack://react-wordpress/./src/blocks/sections/intro/index.tsx","webpack://react-wordpress/./src/template-parts/section-background.tsx","webpack://react-wordpress/./src/blocks/sections/intro/styles/edit.scss","webpack://react-wordpress/./src/blocks/sections/intro/styles/style.scss?ed45","webpack://react-wordpress/external window [\"wp\",\"blockEditor\"]","webpack://react-wordpress/external window [\"wp\",\"blocks\"]","webpack://react-wordpress/external window [\"wp\",\"components\"]","webpack://react-wordpress/external window [\"wp\",\"element\"]","webpack://react-wordpress/external window [\"wp\",\"i18n\"]","webpack://react-wordpress/external window [\"wp\",\"primitives\"]","webpack://react-wordpress/webpack/bootstrap","webpack://react-wordpress/webpack/runtime/chunk loaded","webpack://react-wordpress/webpack/runtime/compat get default export","webpack://react-wordpress/webpack/runtime/define property getters","webpack://react-wordpress/webpack/runtime/hasOwnProperty shorthand","webpack://react-wordpress/webpack/runtime/make namespace object","webpack://react-wordpress/webpack/runtime/jsonp chunk loading","webpack://react-wordpress/webpack/before-startup","webpack://react-wordpress/webpack/startup","webpack://react-wordpress/webpack/after-startup"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst more = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M4 9v1.5h16V9H4zm12 5.5h4V13h-4v1.5zm-6 0h4V13h-4v1.5zm-6 0h4V13H4v1.5z\"\n}));\nexport default more;\n//# sourceMappingURL=more.js.map","// Libs\r\nimport { __experimentalInputControl as InputControl, Panel, PanelBody, PanelRow } from '@wordpress/components'\r\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor'\r\nimport { more } from '@wordpress/icons'\r\nimport { __ } from '@wordpress/i18n'\r\n\r\n// Components\r\nimport SectionBackground, { BackgroundFields, backgroundType } from '../../../../template-parts/section-background'\r\n\r\n// Types\r\nimport { UploadImage, UploadVideo } from '../../../../types/types'\r\nimport { TAttributes } from '../'\r\n\r\n\r\ntype TProps = {\r\n    attributes: TAttributes,\r\n    setAttributes: ( {} ) => any\r\n}\r\n\r\n\r\nconst IntroEdit = ( props: TProps ) => {\r\n    const { attributes, setAttributes } = props\r\n    const { backgroundType: bgType, backgroundImage, backgroundImageAlt, backgroundVideo, posterImage, title, kicker } = attributes\r\n    const blockProps = useBlockProps()\r\n\r\n    blockProps.className += ' section section-intro section-intro--style-v2'\r\n\r\n    const THEME_TEXT_DOMAIN = 'react-wordpress'\r\n\r\n    const setTitle = ( value: string ) => {\r\n        setAttributes( { title: value } )\r\n    }\r\n\r\n    const setKicker = ( value: string ) => {\r\n        setAttributes( { kicker: value } )\r\n    }\r\n\r\n    const setType = ( type: backgroundType ) => {\r\n        setAttributes( { backgroundType: type } )\r\n    }\r\n\r\n    const setImage = ( { url, alt }: UploadImage ) => {\r\n        setAttributes( { backgroundImage: url, backgroundImageAlt: alt } )\r\n    }\r\n\r\n    const setVideo = ({ url }: UploadVideo ) => {\r\n        setAttributes( { backgroundVideo: url } )\r\n    }\r\n\r\n    const setPoster = ( { url, alt }: UploadImage ) => {\r\n        setAttributes( { posterImage: url, posterImageAlt: alt } )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InspectorControls key=\"setting\">\r\n                <div id=\"gutenpride-controls\">\r\n                    <Panel header=\"My panel\">\r\n                        <PanelBody\r\n                            title={ __( 'Background', THEME_TEXT_DOMAIN ) }\r\n                            icon={ more }\r\n                            initialOpen={ true }\r\n                        >\r\n                            <PanelRow>\r\n                                <div>\r\n                                    <BackgroundFields\r\n                                        type={ bgType }\r\n                                        setType={ setType }\r\n                                        setImage={ setImage }\r\n                                        setVideo={ setVideo }\r\n                                        setPoster={ setPoster }\r\n                                    />\r\n                                </div>\r\n                            </PanelRow>\r\n                        </PanelBody>\r\n\r\n                        <PanelBody\r\n                            title={ __( 'Content', THEME_TEXT_DOMAIN ) }\r\n                            icon={ more }\r\n                            initialOpen={ true }\r\n                        >\r\n                            <PanelRow>\r\n                                <div>\r\n                                    <InputControl\r\n                                        label={ __( 'Title', THEME_TEXT_DOMAIN ) }\r\n                                        value={ title }\r\n                                        placeholder={ __( 'Type Title', THEME_TEXT_DOMAIN ) }\r\n                                        onChange={ ( value: string ) => setTitle( value ?? '' ) }\r\n                                    />\r\n\r\n                                    <InputControl\r\n                                        label={ __( 'Kicker', THEME_TEXT_DOMAIN ) }\r\n                                        value={ kicker }\r\n                                        placeholder={ __( 'Type Kicker', THEME_TEXT_DOMAIN ) }\r\n                                        onChange={ ( value: string ) => setKicker( value ?? '' ) }\r\n                                    />\r\n                                </div>\r\n                            </PanelRow>\r\n                        </PanelBody>\r\n                    </Panel>\r\n                </div>\r\n            </InspectorControls>\r\n\r\n            <section { ...blockProps }>\r\n                <SectionBackground\r\n                    type={ bgType }\r\n                    imageSrc={ backgroundImage }\r\n                    imageAlt={ backgroundImageAlt }\r\n                    videoSrc={ backgroundVideo }\r\n                    videoPoster={ posterImage }\r\n                />\r\n\r\n                <div className=\"section__body section-intro__body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"section-intro__content\">\r\n                            <div className=\"section-intro__main\">\r\n                                <div className=\"section-intro__subtitle section-subtitle\">\r\n                                    { kicker }\r\n                                </div>\r\n\r\n                                <div className=\"section-intro__title section-title\">\r\n                                    <h1 className=\"js-font-title\">\r\n                                        { title }\r\n                                    </h1>\r\n                                </div>\r\n\r\n                                <div className=\"section-intro__buttons\">\r\n                                    <a\r\n                                        className=\"button button-primary section-intro__button\"\r\n                                        href=\"#\"\r\n                                        target=\"#\"\r\n                                    >\r\n                                        { __( 'Learn More', THEME_TEXT_DOMAIN ) }\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"section-intro__video\">\r\n                                <div className=\"section-intro__video-inner\">\r\n                                    <a\r\n                                        className=\"button-play button-play--small\"\r\n                                        href=\"#\"\r\n                                        data-toggle=\"modal\"\r\n                                        aria-label={ __( 'Watch Video', THEME_TEXT_DOMAIN ) }\r\n                                    >\r\n                                        <span className=\"button-play__icon\">\r\n\r\n                                        </span>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IntroEdit","const IntroSave = ( props: any ) => {\r\n    const { attributes } = props\r\n\r\n    return (\r\n        <section>\r\n            Hello editor\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default IntroSave","// Libs\r\nimport { registerBlockType } from '@wordpress/blocks'\r\n\r\n// Components\r\nimport IntroEdit from './components/edit'\r\nimport IntroSave from './components/save'\r\n\r\n// Styles\r\nimport './styles/edit.scss'\r\nimport './styles/style.scss'\r\n\r\n// Data\r\nimport metadata from './block.json'\r\n\r\n// Types\r\nimport { backgroundType } from '../../../template-parts/section-background'\r\n\r\n\r\nexport type TAttributes = {\r\n    backgroundType: backgroundType\r\n    backgroundImage: string\r\n    backgroundImageAlt: string\r\n    backgroundVideo: string\r\n    posterImage: string\r\n    title: string\r\n    kicker: string\r\n}\r\n\r\n\r\nregisterBlockType( metadata.name, {\r\n    attributes: {\r\n        backgroundType: { type: 'string' },\r\n        backgroundImage: { type: 'string' },\r\n        backgroundImageAlt: { type: 'string' },\r\n        backgroundVideo: { type: 'string' },\r\n        posterImage: { type: 'string' },\r\n        title: { type: 'string' },\r\n        kicker: { type: 'string' }\r\n    },\r\n\r\n    example: {\r\n        attributes: {\r\n            backgroundType: '',\r\n            backgroundImage: '',\r\n            backgroundImageAlt: '',\r\n            backgroundVideo: '',\r\n            posterImage: '',\r\n            title: 'Intro Section',\r\n            kicker: 'Kicker'\r\n        }\r\n    },\r\n\r\n    edit: IntroEdit,\r\n\r\n    save: IntroSave\r\n} )","// Libs\r\nimport { Button, ButtonGroup } from '@wordpress/components'\r\nimport { MediaUpload } from '@wordpress/block-editor'\r\nimport { useState } from '@wordpress/element'\r\nimport { __ } from '@wordpress/i18n'\r\n\r\n// Types\r\nimport { MediaUploadRenderProp, UploadImage } from '../types/types'\r\n\r\nexport enum backgroundType {\r\n    None = 'none',\r\n    Image = 'image',\r\n    Video = 'video'\r\n}\r\n\r\ninterface IBackgroundFields {\r\n    type: backgroundType\r\n    setType: ( arg: backgroundType ) => void\r\n    setImage: ( {}: UploadImage ) => void\r\n    setVideo: ( {}: any ) => void\r\n    setPoster: ( {}: UploadImage ) => void\r\n}\r\n\r\nexport const BackgroundFields = ( { type, setType, setImage, setVideo, setPoster }: IBackgroundFields ) => {\r\n    const THEME_TEXT_DOMAIN = 'react-wordpress'\r\n\r\n    const imageFields = () => {\r\n        return (\r\n            <fieldset>\r\n                <legend className=\"blocks-base-control__label\">\r\n                    { __( 'Image', THEME_TEXT_DOMAIN ) }\r\n                </legend>\r\n\r\n                <MediaUpload\r\n                    value={ 1 }\r\n                    allowedTypes={ ['image'] }\r\n                    onSelect={ setImage }\r\n                    render={ ( render: MediaUploadRenderProp ) =>\r\n                        <Button\r\n                            onClick={ render.open }\r\n                            variant=\"primary\"\r\n                        >\r\n                            { __('Upload Image', THEME_TEXT_DOMAIN) }\r\n                        </Button>\r\n                    }\r\n                />\r\n            </fieldset>\r\n        )\r\n    }\r\n\r\n    const videoFields = () => {\r\n        return (\r\n            <fieldset>\r\n                <legend className=\"blocks-base-control__label\">\r\n                    { __( 'Video', THEME_TEXT_DOMAIN ) }\r\n                </legend>\r\n\r\n                <MediaUpload\r\n                    value={ 1 }\r\n                    allowedTypes={ ['video'] }\r\n                    onSelect={ setVideo }\r\n                    render={ ( render: MediaUploadRenderProp ) =>\r\n                        <Button\r\n                            onClick={ render.open }\r\n                            variant=\"primary\"\r\n                        >\r\n                            { __('Upload Video', THEME_TEXT_DOMAIN) }\r\n                        </Button>\r\n                    }\r\n                />\r\n\r\n                <MediaUpload\r\n                    value={ 1 }\r\n                    allowedTypes={ ['image'] }\r\n                    onSelect={ setPoster }\r\n                    render={ ( render: MediaUploadRenderProp ) =>\r\n                        <Button\r\n                            onClick={ render.open }\r\n                            variant=\"primary\"\r\n                        >\r\n                            { __('Upload Video Poster', THEME_TEXT_DOMAIN) }\r\n                        </Button>\r\n                    }\r\n                />\r\n            </fieldset>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <fieldset>\r\n                <legend className=\"blocks-base-control__label\">\r\n                    { __( 'Background Type', THEME_TEXT_DOMAIN ) }\r\n                </legend>\r\n\r\n                <ButtonGroup>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={ () => setType( backgroundType.None ) }\r\n                    >\r\n                        { __( 'None', THEME_TEXT_DOMAIN ) }\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={ () => setType( backgroundType.Image ) }\r\n                    >\r\n                        { __( 'Image', THEME_TEXT_DOMAIN ) }\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={ () => setType( backgroundType.Video ) }\r\n                    >\r\n                        { __( 'Video', THEME_TEXT_DOMAIN ) }\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </fieldset>\r\n\r\n            { type === 'image' ? imageFields() : null }\r\n            { type === 'video' ? videoFields() : null }\r\n        </>\r\n    )\r\n}\r\n\r\ninterface ISectionBackground {\r\n    type: backgroundType\r\n\r\n    imageSrc?: string\r\n    imageAlt?: string\r\n\r\n    videoSrc?: string\r\n    videoPoster?: string\r\n}\r\n\r\n\r\nconst SectionBackground = ( { type, imageSrc = '', imageAlt = '', videoSrc = '', videoPoster = '' }: ISectionBackground ) => {\r\n\r\n    const imageBg = () => {\r\n        return (\r\n            <picture>\r\n                <source srcSet={ imageSrc } media=\"(min-width: 1920px)\"/>\r\n                <source srcSet={ imageSrc } media=\"(min-width: 1280px)\"/>\r\n                <source srcSet={ imageSrc } media=\"(max-width: 1279px)\"/>\r\n                <source srcSet={ imageSrc } media=\"(max-width: 767px)\"/>\r\n                <img src={ imageSrc } alt={ imageAlt }/>\r\n            </picture>\r\n        )\r\n    }\r\n\r\n    const videoBg = () => {\r\n        return (\r\n            <video disablePictureInPicture loop autoPlay playsInline muted poster={ videoPoster }>\r\n                <source src={ videoSrc } type=\"video/mp4\"/>\r\n            </video>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section__bg\" aria-hidden=\"true\">\r\n                <div className=\"background-img\">\r\n                    { type === backgroundType.Image ? imageBg() : null }\r\n                    { type === backgroundType.Video ? videoBg() : null }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SectionBackground","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/sections/intro/index\": 0,\n\t\"blocks/sections/intro/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_wordpress\"] = self[\"webpackChunkreact_wordpress\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/sections/intro/style-index\"], function() { return __webpack_require__(\"./src/blocks/sections/intro/index.tsx\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__experimentalInputControl","InputControl","Panel","PanelBody","PanelRow","useBlockProps","InspectorControls","more","__","SectionBackground","BackgroundFields","IntroEdit","props","attributes","setAttributes","backgroundType","bgType","backgroundImage","backgroundImageAlt","backgroundVideo","posterImage","title","kicker","blockProps","className","THEME_TEXT_DOMAIN","setTitle","value","setKicker","setType","type","setImage","_ref","url","alt","setVideo","_ref2","setPoster","_ref3","posterImageAlt","createElement","Fragment","key","id","header","icon","initialOpen","label","placeholder","onChange","imageSrc","imageAlt","videoSrc","videoPoster","href","target","IntroSave","registerBlockType","metadata","name","example","edit","save","Button","ButtonGroup","MediaUpload","imageFields","allowedTypes","onSelect","render","onClick","open","variant","videoFields","None","Image","Video","imageBg","srcSet","media","src","videoBg","disablePictureInPicture","loop","autoPlay","playsInline","muted","poster"],"sourceRoot":""}