{"version":3,"file":"blocks/dynamic-block-2/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACV;AAKX;AACG;AAEpCA,oEAAiB,CAAE,sCAAsC,EAAE;EACvDM,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,8BAA8B;EACrCC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;IACRC,OAAO,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC;IAC3BC,SAAS,EAAE;MAAED,IAAI,EAAE;IAAS;EAChC,CAAC;EACDE,IAAI,EAAE,SAASC,SAAS,OAA0D;IAAA,IAAxD;MAAEL,UAAU,EAAE;QAAEC,OAAO;QAAEE;MAAU,CAAC;MAAEG;IAAc,CAAC;IAC3E,MAAMC,UAAU,GAAGf,sEAAa,EAAE;IAClC,MAAMgB,KAAK,GAAGjB,0DAAS,CAAIkB,MAAM,IAAM;MACnC,OAAOA,MAAM,CAAE,MAAM,CAAE,CAACC,gBAAgB,CAAE,UAAU,EAAE,MAAM,EAAE;QAC1DC,QAAQ,EAAE;MACd,CAAC,CAAE;IACP,CAAC,EAAE,EAAE,CAAE;IAEP,MAAMC,eAAe,GAAKC,QAAQ,IAAM;MACpCP,aAAa,CAAE;QAAEL,OAAO,EAAEY;MAAS,CAAC,CAAE;IAC1C,CAAC;IAED,MAAMC,iBAAiB,GAAKC,QAAQ,IAAM;MACtCT,aAAa,CAAE;QAAEH,SAAS,EAAEY;MAAS,CAAC,CAAE;IAC5C,CAAC;IAED,IAAK,CAAEP,KAAK,EACR,OAAO,IAAI;IAEf,OACI,yEAAUD,UAAU,EAChB,kEAAC,sEAAiB;MAAC,GAAG,EAAC;IAAS,GAC5B,oFACI;MAAQ,SAAS,EAAC;IAA4B,GACxCZ,mDAAE,CAAE,kBAAkB,CAAE,CACrB,EACT,kEAAC,iEAAY,CAAC;IAAA;MACV,QAAQ,EAAGiB,eAAiB,CAAC;IAAA,EAC/B,CACK,EACX,oFACI;MAAQ,SAAS,EAAC;IAA4B,GACxCjB,mDAAE,CAAE,YAAY,CAAE,CACf,EACT,kEAAC,iEAAY,CAAC;IAAA;MACV,QAAQ,EAAGmB,iBAAmB,CAAC;IAAA,EACjC,CACK,CACK,EAClB,CAAC,CAAEN,KAAK,CAACQ,MAAM,IACb;MACI,KAAK,EAAG;QACJC,eAAe,EAAEhB,OAAO;QACxBiB,KAAK,EAAEf;MACX;IAAG,GAEDK,KAAK,CAAE,CAAC,CAAE,CAACX,KAAK,CAACsB,QAAQ,CAElC,CACC;EAEd;AACJ,CAAC,CAAE,C","sources":["webpack://react-wordpress/external window [\"wp\",\"blockEditor\"]","webpack://react-wordpress/external window [\"wp\",\"blocks\"]","webpack://react-wordpress/external window [\"wp\",\"data\"]","webpack://react-wordpress/external window [\"wp\",\"element\"]","webpack://react-wordpress/external window [\"wp\",\"i18n\"]","webpack://react-wordpress/webpack/bootstrap","webpack://react-wordpress/webpack/runtime/compat get default export","webpack://react-wordpress/webpack/runtime/define property getters","webpack://react-wordpress/webpack/runtime/hasOwnProperty shorthand","webpack://react-wordpress/webpack/runtime/make namespace object","webpack://react-wordpress/./src/blocks/dynamic-block-2/index.tsx"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport { useSelect } from '@wordpress/data';\r\nimport {\r\n    useBlockProps,\r\n    ColorPalette,\r\n    InspectorControls,\r\n} from '@wordpress/block-editor';\r\nimport { __ } from '@wordpress/i18n'\r\n\r\nregisterBlockType( 'gutenberg-examples/example-dynamic-2', {\r\n    apiVersion: 2,\r\n    title: 'Example: last post title 123',\r\n    icon: 'megaphone',\r\n    category: 'design',\r\n    attributes: {\r\n        bgColor: { type: 'string' },\r\n        textColor: { type: 'string' },\r\n    },\r\n    edit: function BlockEdit( { attributes: { bgColor, textColor }, setAttributes } ) {\r\n        const blockProps = useBlockProps();\r\n        const posts = useSelect( ( select ) => {\r\n            return select( 'core' ).getEntityRecords( 'postType', 'post', {\r\n                per_page: 1,\r\n            } );\r\n        }, [] );\r\n\r\n        const onChangeBGColor = ( hexColor ) => {\r\n            setAttributes( { bgColor: hexColor } );\r\n        };\r\n\r\n        const onChangeTextColor = ( newColor ) => {\r\n            setAttributes( { textColor: newColor } );\r\n        };\r\n\r\n        if ( ! posts )\r\n            return null;\r\n\r\n        return (\r\n            <div { ...blockProps }>\r\n                <InspectorControls key=\"setting\">\r\n                    <fieldset>\r\n                        <legend className=\"blocks-base-control__label\">\r\n                            { __( 'Background color' ) }\r\n                        </legend>\r\n                        <ColorPalette // Element Tag for Gutenberg standard colour selector\r\n                            onChange={ onChangeBGColor } // onChange event callback\r\n                        />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend className=\"blocks-base-control__label\">\r\n                            { __( 'Text color' ) }\r\n                        </legend>\r\n                        <ColorPalette // Element Tag for Gutenberg standard colour selector\r\n                            onChange={ onChangeTextColor } // onChange event callback\r\n                        />\r\n                    </fieldset>\r\n                </InspectorControls>\r\n                { !! posts.length && (\r\n                    <h3\r\n                        style={ {\r\n                            backgroundColor: bgColor,\r\n                            color: textColor,\r\n                        } }\r\n                    >\r\n                        { posts[ 0 ].title.rendered }\r\n                    </h3>\r\n                ) }\r\n            </div>\r\n        );\r\n    },\r\n} );"],"names":["registerBlockType","useSelect","useBlockProps","ColorPalette","InspectorControls","__","apiVersion","title","icon","category","attributes","bgColor","type","textColor","edit","BlockEdit","setAttributes","blockProps","posts","select","getEntityRecords","per_page","onChangeBGColor","hexColor","onChangeTextColor","newColor","length","backgroundColor","color","rendered"],"sourceRoot":""}